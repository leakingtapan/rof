/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'checkstyle'
    id 'maven'
}

sourceCompatibility = 1.8

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
    }
    test {
        java {
            srcDirs = ['tst']
        }
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:27.0.1-jre'
    implementation 'org.apache.commons:commons-lang3:3.4'
    implementation 'cglib:cglib:3.2.0'

    // Use TestNG framework, also requires calling test.useTestNG() below
    testImplementation 'org.testng:testng:6.14.3'
    testImplementation 'org.easymock:easymock:3.4'
}

test {
    // Use TestNG for unit tests
    useTestNG() {
        suites 'tst/resources/testng.xml'
    }

    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

jar {
    archivesBaseName = 'objectfactory'
    archiveVersion =  '1.0.0'
}

checkstyle {
    configFile = 'configuration/checkstyle/checkstyle-8.8-config.xml' as File
}

task writeNewPom {
    doLast {
        pom {
            project {
                inceptionYear '2019'
                groupId 'com.amazon.datagen'
                artifactId 'objectfactory'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
                version = jar.archiveVersion.get()
            }
        }.writeTo("pom.xml")
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://localhost/tmp/myRepo/")
        }
    }
}
